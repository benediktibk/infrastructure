server {
    listen                  80;
    server_name             ${WEBFQDN};

    location / {
        rewrite ^/(.*)$ https://me.${WEBFQDN}/$1 redirect;
    }

    location /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
}

server {
    listen                  80;
    server_name             *.${WEBFQDN};

    location / {
        rewrite ^/(.*)$ https://$host/$1 redirect;
    }

    location /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
}

server {
    listen                      443 ssl;
    server_name                 ${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_benediktschmidt.at.key;

    location / {
        rewrite ^/(.*)$ https://me.${WEBFQDN}/$1 redirect;
    }
}

server {
    listen                      443 ssl;
    server_name                 www.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_www.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_www.benediktschmidt.at.key;

    location / {
        rewrite ^/(.*)$ https://me.${WEBFQDN}/$1 redirect;
    }
}

server {
    listen                      443 ssl;
    server_name                 me.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_me.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_me.benediktschmidt.at.key;

    location / {
        proxy_pass http://${TARGETME};
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   $server_port;
        proxy_cache                         STATIC;
        proxy_cache_valid                   200  7d;
        proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
        expires                             7d;
        add_header                          Cache-Control "public";
    }
}

server {
    listen                      443 ssl;
    server_name                 corona.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_corona.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_corona.benediktschmidt.at.key;

    location / {
        proxy_pass http://${TARGETCORONA};
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   $server_port;
        proxy_cache                         STATIC;
        proxy_cache_valid                   200  1h;
        proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
        expires                             1h;
        add_header                          Cache-Control "public";
    }
}

server {
    listen                      443 ssl;
    server_name                 downloads.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_downloads.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_downloads.benediktschmidt.at.key;

    location / {
        proxy_pass http://${TARGETDOWNLOADS};
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   $server_port;
        proxy_cache                         STATIC;
        proxy_cache_valid                   200  1d;
        proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
        expires                             1d;
        add_header                          Cache-Control "public";
    }
}

server {
    listen                      443 ssl;
    server_name                 monitoring.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_monitoring.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_monitoring.benediktschmidt.at.key;

    location / {
        proxy_pass http://${TARGETMONITORING};
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   $server_port;
        proxy_cache                         STATIC;
        proxy_cache_valid                   200  1h;
        proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
        expires                             1h;
        add_header                          Cache-Control "public";
    }
}

server {
    listen                      443 ssl;
    server_name                 kibana.${WEBFQDN};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
    ssl_certificate             /etc/nginx/certs/web_kibana.benediktschmidt.at.crt;
    ssl_certificate_key         /etc/nginx/certs/web_kibana.benediktschmidt.at.key;

    location / {
        proxy_pass http://${TARGETKIBANA};
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   $server_port;
        proxy_cache                         STATIC;
        proxy_cache_valid                   200  1h;
        proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
        expires                             1h;
        add_header                          Cache-Control "public";
    }
}